package uk.co.davidatkins.spikes.euler;

import org.junit.jupiter.api.Test;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Problem2 {

    /**
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
     *
     * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     *
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
     */
    @Test
    public void problem2() {

        System.out.println(fibRecursive(1,2, 2));

    }

    private int fibRecursive(int first, int second, int total) {

        int next = first + second;

        if(next >= 4000000) {
            return total;
        }

        if(next % 2 == 0) {
            return fibRecursive(second,next,total+next);
        } else {
            return fibRecursive(second,next,total);
        }

    }

}
